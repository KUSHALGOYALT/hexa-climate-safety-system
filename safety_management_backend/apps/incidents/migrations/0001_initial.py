# Generated by Django 4.2.7 on 2025-07-31 11:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sites", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "incident_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "incident_type",
                    models.CharField(
                        choices=[
                            ("UNSAFE_ACT", "Unsafe Act"),
                            ("UNSAFE_CONDITION", "Unsafe Condition"),
                            ("NEAR_MISS", "Near Miss"),
                            ("FEEDBACK", "General Feedback"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("location_description", models.CharField(blank=True, max_length=500)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        help_text="Incident location latitude",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        help_text="Incident location longitude",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                (
                    "criticality",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                            ("EMERGENCY", "Emergency"),
                        ],
                        default="LOW",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REPORTED", "Reported"),
                            ("ACKNOWLEDGED", "Acknowledged"),
                            ("INVESTIGATING", "Under Investigation"),
                            ("IN_PROGRESS", "Corrective Action in Progress"),
                            ("RESOLVED", "Resolved"),
                            ("CLOSED", "Closed"),
                        ],
                        default="REPORTED",
                        max_length=20,
                    ),
                ),
                ("reporter_name", models.CharField(blank=True, max_length=200)),
                ("reporter_email", models.EmailField(blank=True, max_length=254)),
                ("reporter_phone", models.CharField(blank=True, max_length=20)),
                ("employee_id", models.CharField(blank=True, max_length=50)),
                ("department", models.CharField(blank=True, max_length=100)),
                ("device_id", models.CharField(blank=True, max_length=100)),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("MOBILE", "Mobile Device"),
                            ("TABLET", "Tablet"),
                            ("KIOSK", "Reporting Kiosk"),
                            ("WEB", "Web Browser"),
                        ],
                        default="MOBILE",
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("is_anonymous", models.BooleanField(default=False)),
                (
                    "incident_number",
                    models.CharField(blank=True, max_length=50, unique=True),
                ),
                ("priority_score", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                ("assigned_to", models.CharField(blank=True, max_length=200)),
                ("assigned_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("corrective_actions", models.TextField(blank=True)),
                ("preventive_actions", models.TextField(blank=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                (
                    "estimated_resolution_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("actual_resolution_date", models.DateTimeField(blank=True, null=True)),
                ("attachment_count", models.IntegerField(default=0)),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incidents",
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "db_table": "incidents",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IncidentResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "response_type",
                    models.CharField(
                        choices=[
                            ("INVESTIGATION", "Investigation"),
                            ("CORRECTIVE_ACTION", "Corrective Action"),
                            ("PREVENTIVE_ACTION", "Preventive Action"),
                            ("FOLLOW_UP", "Follow-up"),
                            ("STATUS_UPDATE", "Status Update"),
                            ("CLOSURE", "Closure"),
                        ],
                        max_length=20,
                    ),
                ),
                ("response_text", models.TextField()),
                ("responder_name", models.CharField(max_length=200)),
                ("responder_email", models.EmailField(blank=True, max_length=254)),
                ("responder_role", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_internal", models.BooleanField(default=True)),
                ("is_visible_to_reporter", models.BooleanField(default=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="incidents.incident",
                    ),
                ),
            ],
            options={
                "db_table": "incident_responses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IncidentNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("SMS", "SMS"),
                            ("PUSH", "Push Notification"),
                            ("SYSTEM", "System Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("recipient_email", models.EmailField(blank=True, max_length=254)),
                ("recipient_phone", models.CharField(blank=True, max_length=20)),
                ("recipient_name", models.CharField(max_length=200)),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SENT", "Sent"),
                            ("DELIVERED", "Delivered"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="incidents.incident",
                    ),
                ),
            ],
            options={
                "db_table": "incident_notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IncidentAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                ("file_path", models.CharField(max_length=500)),
                ("file_size", models.IntegerField()),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("IMAGE", "Image"),
                            ("DOCUMENT", "Document"),
                            ("VIDEO", "Video"),
                            ("AUDIO", "Audio"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("mime_type", models.CharField(blank=True, max_length=100)),
                ("uploaded_by", models.CharField(blank=True, max_length=200)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_public", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="incidents.incident",
                    ),
                ),
            ],
            options={
                "db_table": "incident_attachments",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["site", "status"], name="incidents_site_id_63d565_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["incident_type", "criticality"],
                name="incidents_inciden_c65d3b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["created_at"], name="incidents_created_bc994b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["status", "assigned_to"], name="incidents_status_8129cc_idx"
            ),
        ),
    ]
